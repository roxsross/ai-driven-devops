name: Scheduled AI Health Monitoring

# Run every 6 hours and on manual trigger
on:
  schedule:
    - cron: '0 */6 * * *'  # Every 6 hours
  workflow_dispatch:  # Manual trigger
    inputs:
      environment:
        description: 'Environment to monitor'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - staging
          - development

jobs:
  scheduled-health-check:
    name: Scheduled Health Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Configure AWS credentials
        continue-on-error: true
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      
      - name: AI Health Monitoring
        id: health-check
        uses: roxsross/ai-driven-devops@v1
        with:
          # Monitoring mode (non-blocking)
          simulation-mode: 'false'
          blocking-mode: 'false'
          health-threshold: '80'
          
          # AI Configuration
          bedrock-model-id: 'amazon.nova-pro-v1:0'
          
          # Monitoring Integration
          prometheus-url: ${{ secrets.PROMETHEUS_URL }}
          grafana-url: ${{ secrets.GRAFANA_URL }}
          grafana-token: ${{ secrets.GRAFANA_TOKEN }}
          
          # Environment (from input or default)
          namespace: ${{ github.event.inputs.environment || 'production' }}
          
          # Notifications (important for scheduled runs)
          telegram-bot-token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          telegram-chat-id: ${{ secrets.TELEGRAM_CHAT_ID }}
          
          # CI/CD Context
          ci-pipeline-id: ${{ github.run_id }}
          ci-environment: 'scheduled-monitoring'
          ci-commit-sha: ${{ github.sha }}
      
      - name: Health Report
        run: |
          echo "🕐 Scheduled Health Check Report"
          echo "================================"
          echo "🌍 Environment: ${{ github.event.inputs.environment || 'production' }}"
          echo "📊 Health Score: ${{ steps.health-check.outputs.health-score }}/100"
          echo "🚨 Critical Issues: ${{ steps.health-check.outputs.critical-issues }}"
          echo "🤖 AI Recommendation: ${{ steps.health-check.outputs.recommendation }}"
          echo "📋 Analysis: ${{ steps.health-check.outputs.analysis-summary }}"
          echo "⏰ Timestamp: $(date -u)"
      
      - name: Create Issue on Critical Problems
        if: steps.health-check.outputs.critical-issues > 0
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `🚨 Critical Health Issues Detected - ${{ github.event.inputs.environment || 'production' }}`,
              body: `
              ## 🚨 AI Observability Alert
              
              **Environment:** ${{ github.event.inputs.environment || 'production' }}
              **Health Score:** ${{ steps.health-check.outputs.health-score }}/100
              **Critical Issues:** ${{ steps.health-check.outputs.critical-issues }}
              **Recommendation:** ${{ steps.health-check.outputs.recommendation }}
              
              **Analysis Summary:**
              ${{ steps.health-check.outputs.analysis-summary }}
              
              **Action Required:** Please investigate and resolve the critical issues.
              
              ---
              *Generated by AI-Driven Observability at $(date -u)*
              `,
              labels: ['bug', 'critical', 'ai-observability']
            })
